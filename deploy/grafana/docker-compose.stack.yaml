services:
  grafana:
    image: grafana/grafana
    restart: always
    expose:
      - 3000
    networks:
      - caddy-public
      - movie-tracker-metrics
      - grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    deploy:
      placement:
        constraints:
          - node.role != manager
          - node.labels.databases != true
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - grafana
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      placement:
        constraints:
          - node.role == manager
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - grafana
    deploy:
      placement:
        constraints:
          - node.role != manager
          - node.labels.databases != true

volumes:
  grafana-storage:
  prometheus_data:

networks:
  grafana:
    name: grafana
  movie-tracker-metrics:
    name: movie-tracker-metrics
    external: true
  caddy-public:
    name: caddy-public
    external: true
