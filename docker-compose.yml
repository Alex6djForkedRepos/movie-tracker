version: '3'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - movie-tracker
    environment:
      POSTGRES_USER: ${DATABASE_USER:-spaceman}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-spaceman}
      POSTGRES_DB: movietracker
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - movie-tracker
      - caddy-public
  backup:
    image: schickling/postgres-backup-s3
    container_name: backup
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - movie-tracker
    environment:
      SCHEDULE: '@every 8h'
      S3_REGION: ${S3_REGION}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PREFIX: ${S3_PREFIX:-backups}
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: movietracker
      POSTGRES_USER: ${DATABASE_USER:-spaceman}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-spaceman}
      POSTGRES_BACKUP_ALL: "false"
      POSTGRES_EXTRA_OPTS: "--inserts --data-only"
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    networks:
      - caddy-public
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
  frontend:
    image: danilavoronkov/movie-tracker-frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - movie-tracker
      - caddy-public
    build:
      context: .
      dockerfile: ./apps/frontendVue/Dockerfile
      args:
        - VITE_BASE_URL=${VITE_BASE_URL}
        - VITE_API_URL=${VITE_API_URL}
        - VITE_TMDB_API_URL=${VITE_TMDB_API_URL}
        - VITE_TMDB_API_KEY=${VITE_TMDB_API_KEY}
    env_file: ./.env
  backend:
    image: danilavoronkov/movie-tracker-backend
    container_name: backend
    restart: unless-stopped
    ports:
      - 1337:1337
    networks:
      - movie-tracker
      - caddy-public
    build:
      dockerfile: ./apps/backend/Dockerfile
    env_file: ./.env
    volumes:
      - sitemaps:/app/apps/backend/sitemaps

volumes:
  caddy_data:
  caddy_config:
  postgres-data:
  sitemaps:

networks:
  movie-tracker:
    name: movie-tracker
  caddy-public:
    external: true
